Java Features

1. Simple
Java is very easy to learn, and its syntax is simple, clean and easy to understand. According to Sun Microsystem, Java language is a simple programming language because:
    Java syntax is based on C++ (so easier for programmers to learn it after C++).
    Java has removed many complicated and rarely-used features, for example, explicit pointers, operator overloading, etc.
    There is no need to remove unreferenced objects because there is an Automatic Garbage Collection in Java.

2. Secure
In java, we don’t have pointers, so we cannot access out-of-bound arrays i.e it shows ArrayIndexOutOfBound Exception if we try to do so. 
That’s why several security flaws like stack corruption or buffer overflow are impossible to exploit in Java. 
Also, java programs run in an environment that is independent of the os(operating system) environment which makes java programs more secure.

3. Portable
As we know, java code written on one machine can be run on another machine. The platform-independent feature of java in which its platform-independent bytecode can be taken to any platform for execution makes java portable.

4. Robust
Java language is robust which means reliable. It is developed in such a way that it puts a lot of effort into checking errors as early as possible, that is why the java compiler is able to detect even those errors that are not easy to detect by another programming language. 
The main features of java that make it robust are garbage collection, Exception Handling, and memory allocation.

5. Architecture-Neutral
Compiler converts source code to bytecode and then the JVM executes the bytecode generated by the compiler. 
This bytecode can run on any platform be it Windows, Linux, or macOS which means if we compile a program on Windows, then we can run it on Linux and vice versa. 
Each operating system has a different JVM, but the output produced by all the OS is the same after the execution of the bytecode. That is why we call java a platform-independent language.

6. High Performance
Java architecture is defined in such a way that it reduces overhead during the runtime and at some times java uses Just In Time (JIT) compiler where the compiler compiles code on-demand basics where it only compiles those methods that are called making applications to execute faster.

7. Distributed
We can create distributed applications using the java programming language. 
Remote Method Invocation and Enterprise Java Beans are used for creating distributed applications in java. 
The java programs can be easily distributed on one or more systems that are connected to each other through an internet connection.

8. Dynamic
Java being completely object-oriented gives us the flexibility to add classes,  new methods to existing classes, and even create new classes through sub-classes. Java even supports functions written in other languages such as C, C++ which are referred to as native methods.